name: CI

on:
  push:
    branches:
      - main
      - release-*

  # Run build for any PR
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - mongo-version: 4.4
            scala-version: 2.12.20
          - mongo-version: 4.4
            scala-version: 2.13.17
          - mongo-version: "5.0"
            scala-version: 2.13.17
          - mongo-version: "6.0"
            scala-version: 2.13.17
          - mongo-version: "7.0"
            scala-version: 2.13.17
          - mongo-version: "7.0"
            scala-version: 3.7.3
          - mongo-version: "8.0"
            scala-version: 3.7.3
    env:
      MONGODB_AUTH_PORT: 28117
      MONGODB_NOAUTH_PORT: 27117
      MONGODB_OPTS: --storageEngine wiredTiger --bind_ip_all
      CONTAINER_HOST: 127.0.0.1
      PEKKO_TEST_TIMEFACTOR: 10
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      RELEASE_SONATYPE: 'false'
      RELEASE_GH_ACTIONS: 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
        cache: sbt
    - name: Coursier cache
      uses: coursier/cache-action@v6
    - name: Start mongod
      run: |
        echo Starting mongod version ${{matrix.mongo-version}}
        sudo docker pull docker.io/mongo:${{matrix.mongo-version}}
        sudo docker run -d -p $MONGODB_NOAUTH_PORT:27017 \
          docker.io/mongo:${{matrix.mongo-version}} $MONGODB_OPTS
        sudo docker run -d -p $MONGODB_AUTH_PORT:27017 \
          -e MONGO_INITDB_ROOT_USERNAME=admin \
          -e MONGO_INITDB_ROOT_PASSWORD=password \
          docker.io/mongo:${{matrix.mongo-version}} $MONGODB_OPTS
        sudo docker ps -a
    - name: Setup sbt launcher
      uses: sbt/setup-sbt@v1
    - name: Build and test
      shell: bash
      run: |
        echo Running test suite for scala version ${{matrix.scala-version}}
        ./ci_build.sh ${{matrix.scala-version}}
    - name: Cleanup before cache
      shell: bash
      run: |
        rm -rf "$HOME/.ivy2/local" || true
        find $HOME/Library/Caches/Coursier/v1        -name "ivydata-*.properties" -delete || true
        find $HOME/.ivy2/cache                       -name "ivydata-*.properties" -delete || true
        find $HOME/.cache/coursier/v1                -name "ivydata-*.properties" -delete || true
        find $HOME/.sbt                              -name "*.lock"               -delete || true
